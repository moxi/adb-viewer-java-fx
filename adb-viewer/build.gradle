apply plugin: 'java'

dependencies{
    // this dependency is only required when using UserJvmOptionsService
    // compile files("${System.properties['java.home']}/../lib/packager.jar")
}

apply plugin: 'javafx-gradle-plugin'

// configure javafx-gradle-plugin
jfx {
    verbose = true
    mainClass = "com.rcgonzalezf.adbviewer.Main"
    jfxAppOutputDir = "build/jfx/app"
    jfxMainAppJarName = "adb-viewer.jar"
    deployDir = "src/adbviewer/deploy"

    // gradle jfxJar
    css2bin = false
    preLoader = null
    updateExistingJar = false
    allPermissions = false
    manifestAttributes = ['Manifest-Version': '$version'] // Map<String, String>
    addPackagerJar = true

    // gradle jfxNative
    identifier = 'fb0ebafc-a6af-4761-9195-b566362b60a7' // setting this for windows-bundlers makes it possible to generate upgradeable installers (using same GUID)
    vendor = "Roberto Carlos Gonz√°lez Flores"
    nativeOutputDir = "build/jfx/native"
    bundler = "ALL" // set this to some specific, if your don't want all bundlers running, examples "windows.app", "jnlp", ...
    jvmProperties = null // Map<String, String>
    jvmArgs = null // List<String>
    userJvmArgs = null // Map<String, String>
    launcherArguments = null // List<String>
    nativeReleaseVersion = version
    needShortcut = true
    needMenu = false
    bundleArguments = [
            // dont bundle JRE (not recommended, but increases build-size/-speed)
            runtime: null
    ]
    appName = "adb-viewer" // this is used for files below "src/adbviewer/deploy", e.g. "src/adbviewer/deploy/windows/project.ico"
    additionalAppResources = null // path to some additional resources when creating application-bundle
    secondaryLaunchers = [[appName: "adb-viewer-app"]]
    fileAssociations = null // List<Map<String, Object>>
    noBlobSigning = false // when using bundler "jnlp", you can choose to NOT use blob signing

    skipNativeLauncherWorkaround124 = false
    skipNativeLauncherWorkaround167 = false
    skipJNLPRessourcePathWorkaround182 = false
    skipSigningJarFilesJNLP185 = false
    skipSizeRecalculationForJNLP185 = false

    // gradle jfxGenerateKeyStore
    keyStore = '$javafx.releaseKey.keyStore'
    keyStoreAlias = '$javafx.releaseKey.alias'
    keyStorePassword = '$javafx.releaseKey.storePass'
    keyPassword = '$javafx.releaseKey.keyPass'
    keyStoreType = "jks"
    overwriteKeyStore = false

    certDomain = null // required
    certOrgUnit = null // defaults to "none"
    certOrg = null // required
    certState = null // required
    certCountry = null // required
}

